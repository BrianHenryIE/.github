name: Code Quality Checks

on: pull_request

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Check required files' existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "composer.json"
      - name: Get Composer cache Directory
        if: steps.check_files.outputs.files_exists == 'true'
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Use Composer cache
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer install --dev --prefer-dist --no-progress --no-suggest
      - name: Run Linter
        run: vendor/bin/parallel-lint -j 10 . --exclude vendor --checkstyle | cs2pr --graceful-warnings

  phpcs:
    name: PHPCS
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Check required files' existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "composer.json, phpcs.xml.dist"
      - name: Get Composer cache Directory
        if: steps.check_files.outputs.files_exists == 'true'
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Use Composer cache
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer install --dev --prefer-dist --no-progress --no-suggest
      - name: Run PHPCS
        if: steps.check_files.outputs.files_exists == 'true'
        run: vendor/bin/phpcs -q --report=checkstyle | cs2pr --graceful-warnings
